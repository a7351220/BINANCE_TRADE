"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/stores/marketStore.ts":
/*!***********************************!*\
  !*** ./src/stores/marketStore.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMarketStore: function() { return /* binding */ useMarketStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"./node_modules/zustand/esm/index.mjs\");\n\n// 改用數組來存儲異常記錄\nconst anomalyRecords = [];\nconst calculateStats = function(volumes) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    // 使用中位數而不是平均值，對異常值更穩健\n    const sortedVolumes = [\n        ...volumes\n    ].sort((a, b)=>a - b);\n    const median = sortedVolumes[Math.floor(sortedVolumes.length / 2)];\n    // 使用中位數絕對偏差(MAD)來代替標準差，對異常值更穩健\n    const deviations = sortedVolumes.map((v)=>Math.abs(v - median));\n    const mad = deviations.sort((a, b)=>a - b)[Math.floor(deviations.length / 2)];\n    // MAD 到標準差的轉換係數（假設正態分佈）\n    const madToStdev = 1.4826;\n    return {\n        median,\n        mad: mad * madToStdev\n    };\n};\nconst useMarketStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        data: [],\n        anomalies: [],\n        stats: {\n            mean: 0,\n            stdDev: 0,\n            movingAverages: []\n        },\n        addData: (newData)=>{\n            set((state)=>{\n                const updatedData = [\n                    ...state.data.slice(-99),\n                    newData\n                ];\n                const volumes = updatedData.map((d)=>d.netVolume);\n                const currentIndex = updatedData.length - 1;\n                // 使用更穩健的統計方法\n                const { median, mad } = calculateStats(volumes);\n                // 計算 z-score（使用 MAD）\n                const latestValue = newData.netVolume;\n                const zScore = Math.abs(latestValue - median) / mad;\n                // 使用更嚴格的閾值\n                if (zScore > 3.0) {\n                    anomalyRecords.push({\n                        timestamp: Date.now(),\n                        value: latestValue,\n                        zScore,\n                        index: currentIndex\n                    });\n                }\n                // 清理舊記錄並保持最近的異常值\n                const tenMinutesAgo = Date.now() - 10 * 60 * 1000;\n                const recentAnomalies = anomalyRecords.filter((record)=>{\n                    // 檢查時間和索引的有效性\n                    const isRecent = record.timestamp > tenMinutesAgo;\n                    const isValidIndex = record.index > currentIndex - 100;\n                    return isRecent && isValidIndex;\n                }).sort((a, b)=>b.timestamp - a.timestamp).slice(0, 10);\n                // 更新記錄\n                anomalyRecords.length = 0;\n                anomalyRecords.push(...recentAnomalies);\n                // 獲取異常值索引，確保索引在當前數據範圍內\n                const anomalies = recentAnomalies.map((record)=>record.index % 100) // 轉換為相對索引\n                .filter((index)=>index >= 0 && index < updatedData.length); // 確保索引有效\n                // 計算移動中位數而不是移動平均\n                const movingAverages = volumes.map((_, i)=>{\n                    const period = 60;\n                    const start = Math.max(0, i - period + 1);\n                    const windowData = volumes.slice(start, i + 1);\n                    return windowData.reduce((a, b)=>a + b, 0) / windowData.length;\n                });\n                return {\n                    data: updatedData,\n                    anomalies,\n                    stats: {\n                        mean: median,\n                        stdDev: mad,\n                        movingAverages\n                    }\n                };\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stores/marketStore.ts\n"));

/***/ })

});