"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/calculations.ts":
/*!***********************************!*\
  !*** ./src/utils/calculations.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateMovingAverage: function() { return /* binding */ calculateMovingAverage; },\n/* harmony export */   calculateStats: function() { return /* binding */ calculateStats; }\n/* harmony export */ });\nconst calculateMovingAverage = function(data) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    if (data.length < period) return data.reduce((a, b)=>a + b, 0) / data.length;\n    const latestData = data.slice(-period);\n    return latestData.reduce((a, b)=>a + b, 0) / period;\n};\n// 使用一個類來管理異常值，避免全局狀態問題\nclass AnomalyDetector {\n    addAnomaly(timestamp, relativeIndex) {\n        this.anomalies.set(timestamp, relativeIndex);\n        this.cleanup();\n    }\n    cleanup() {\n        const tenMinutesAgo = Date.now() - 10 * 60 * 1000;\n        for (const [timestamp] of this.anomalies){\n            if (timestamp < tenMinutesAgo) {\n                this.anomalies.delete(timestamp);\n            }\n        }\n    }\n    getAnomalies() {\n        return Array.from(this.anomalies.entries()).sort((a, b)=>b[0] - a[0]) // 按時間戳降序排序\n        .map((param)=>{\n            let [_, index] = param;\n            return index;\n        }).slice(0, 10); // 只保留最近的 10 個異常值\n    }\n    constructor(){\n        this.anomalies = new Map();\n    }\n}\nconst detector = new AnomalyDetector();\nconst calculateStats = function(data) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    const volumes = data.map((d)=>d.netVolume);\n    const mean = calculateMovingAverage(volumes, period);\n    // 計算標準差\n    const recentVolumes = volumes.slice(-period);\n    const stdDev = Math.sqrt(recentVolumes.reduce((a, b)=>a + Math.pow(b - mean, 2), 0) / period);\n    // 只檢查最新的數據點\n    const latestValue = volumes[volumes.length - 1];\n    const zScore = Math.abs(latestValue - mean) / stdDev;\n    // 如果最新數據點是異常值，添加到檢測器中\n    if (zScore > 2.5) {\n        detector.addAnomaly(Date.now(), data.length - 1);\n    }\n    // 獲取異常值列表並調整索引\n    const anomalies = detector.getAnomalies().filter((index)=>index >= data.length - 100) // 只保留最近 100 筆數據的異常值\n    .map((index)=>index % 100); // 轉換為相對索引\n    // 計算移動平均線數據\n    const movingAverages = volumes.map((_, i)=>{\n        if (i < period) {\n            return calculateMovingAverage(volumes.slice(0, i + 1));\n        }\n        return calculateMovingAverage(volumes.slice(i - period + 1, i + 1));\n    });\n    return {\n        mean,\n        stdDev,\n        anomalies,\n        movingAverages\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUcyQyxJQUFJO0lBQ2xFO0lBRUEsT0FBTztRQUNMWDtRQUNBRTtRQUNBdkI7UUFDQStCO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9jYWxjdWxhdGlvbnMudHM/MzliNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY2FsY3VsYXRlTW92aW5nQXZlcmFnZSA9IChkYXRhOiBudW1iZXJbXSwgcGVyaW9kOiBudW1iZXIgPSA2MCkgPT4ge1xuICBpZiAoZGF0YS5sZW5ndGggPCBwZXJpb2QpIHJldHVybiBkYXRhLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApIC8gZGF0YS5sZW5ndGg7XG4gIFxuICBjb25zdCBsYXRlc3REYXRhID0gZGF0YS5zbGljZSgtcGVyaW9kKTtcbiAgcmV0dXJuIGxhdGVzdERhdGEucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCkgLyBwZXJpb2Q7XG59O1xuXG4vLyDkvb/nlKjkuIDlgIvpoZ7kvobnrqHnkIbnlbDluLjlgLzvvIzpgb/lhY3lhajlsYDni4DmhYvllY/poYxcbmNsYXNzIEFub21hbHlEZXRlY3RvciB7XG4gIHByaXZhdGUgYW5vbWFsaWVzID0gbmV3IE1hcDxudW1iZXIsIG51bWJlcj4oKTtcbiAgXG4gIGFkZEFub21hbHkodGltZXN0YW1wOiBudW1iZXIsIHJlbGF0aXZlSW5kZXg6IG51bWJlcikge1xuICAgIHRoaXMuYW5vbWFsaWVzLnNldCh0aW1lc3RhbXAsIHJlbGF0aXZlSW5kZXgpO1xuICAgIHRoaXMuY2xlYW51cCgpO1xuICB9XG4gIFxuICBwcml2YXRlIGNsZWFudXAoKSB7XG4gICAgY29uc3QgdGVuTWludXRlc0FnbyA9IERhdGUubm93KCkgLSAxMCAqIDYwICogMTAwMDtcbiAgICBmb3IgKGNvbnN0IFt0aW1lc3RhbXBdIG9mIHRoaXMuYW5vbWFsaWVzKSB7XG4gICAgICBpZiAodGltZXN0YW1wIDwgdGVuTWludXRlc0Fnbykge1xuICAgICAgICB0aGlzLmFub21hbGllcy5kZWxldGUodGltZXN0YW1wKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgXG4gIGdldEFub21hbGllcygpOiBudW1iZXJbXSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5hbm9tYWxpZXMuZW50cmllcygpKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IGJbMF0gLSBhWzBdKSAgLy8g5oyJ5pmC6ZaT5oiz6ZmN5bqP5o6S5bqPXG4gICAgICAubWFwKChbXywgaW5kZXhdKSA9PiBpbmRleClcbiAgICAgIC5zbGljZSgwLCAxMCk7ICAvLyDlj6rkv53nlZnmnIDov5HnmoQgMTAg5YCL55Ww5bi45YC8XG4gIH1cbn1cblxuY29uc3QgZGV0ZWN0b3IgPSBuZXcgQW5vbWFseURldGVjdG9yKCk7XG5cbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVTdGF0cyA9IChkYXRhOiBBcnJheTx7IG5ldFZvbHVtZTogbnVtYmVyIH0+LCBwZXJpb2Q6IG51bWJlciA9IDYwKSA9PiB7XG4gIGNvbnN0IHZvbHVtZXMgPSBkYXRhLm1hcChkID0+IGQubmV0Vm9sdW1lKTtcbiAgY29uc3QgbWVhbiA9IGNhbGN1bGF0ZU1vdmluZ0F2ZXJhZ2Uodm9sdW1lcywgcGVyaW9kKTtcbiAgXG4gIC8vIOioiOeul+aomea6luW3rlxuICBjb25zdCByZWNlbnRWb2x1bWVzID0gdm9sdW1lcy5zbGljZSgtcGVyaW9kKTtcbiAgY29uc3Qgc3RkRGV2ID0gTWF0aC5zcXJ0KFxuICAgIHJlY2VudFZvbHVtZXMucmVkdWNlKChhLCBiKSA9PiBhICsgTWF0aC5wb3coYiAtIG1lYW4sIDIpLCAwKSAvIHBlcmlvZFxuICApO1xuXG4gIC8vIOWPquaqouafpeacgOaWsOeahOaVuOaTmum7nlxuICBjb25zdCBsYXRlc3RWYWx1ZSA9IHZvbHVtZXNbdm9sdW1lcy5sZW5ndGggLSAxXTtcbiAgY29uc3QgelNjb3JlID0gTWF0aC5hYnMobGF0ZXN0VmFsdWUgLSBtZWFuKSAvIHN0ZERldjtcbiAgXG4gIC8vIOWmguaenOacgOaWsOaVuOaTmum7nuaYr+eVsOW4uOWAvO+8jOa3u+WKoOWIsOaqoua4rOWZqOS4rVxuICBpZiAoelNjb3JlID4gMi41KSB7ICAvLyDnqI3lvq7mj5Dpq5jplr7lgLzvvIzmuJvlsJHoqqTloLFcbiAgICBkZXRlY3Rvci5hZGRBbm9tYWx5KERhdGUubm93KCksIGRhdGEubGVuZ3RoIC0gMSk7XG4gIH1cblxuICAvLyDnjbLlj5bnlbDluLjlgLzliJfooajkuKboqr/mlbTntKLlvJVcbiAgY29uc3QgYW5vbWFsaWVzID0gZGV0ZWN0b3IuZ2V0QW5vbWFsaWVzKClcbiAgICAuZmlsdGVyKGluZGV4ID0+IGluZGV4ID49IGRhdGEubGVuZ3RoIC0gMTAwKSAgLy8g5Y+q5L+d55WZ5pyA6L+RIDEwMCDnrYbmlbjmk5rnmoTnlbDluLjlgLxcbiAgICAubWFwKGluZGV4ID0+IGluZGV4ICUgMTAwKTsgIC8vIOi9ieaPm+eCuuebuOWwjee0ouW8lVxuXG4gIC8vIOioiOeul+enu+WLleW5s+Wdh+e3muaVuOaTmlxuICBjb25zdCBtb3ZpbmdBdmVyYWdlcyA9IHZvbHVtZXMubWFwKChfLCBpKSA9PiB7XG4gICAgaWYgKGkgPCBwZXJpb2QpIHtcbiAgICAgIHJldHVybiBjYWxjdWxhdGVNb3ZpbmdBdmVyYWdlKHZvbHVtZXMuc2xpY2UoMCwgaSArIDEpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNhbGN1bGF0ZU1vdmluZ0F2ZXJhZ2Uodm9sdW1lcy5zbGljZShpIC0gcGVyaW9kICsgMSwgaSArIDEpKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHsgXG4gICAgbWVhbiwgXG4gICAgc3RkRGV2LCBcbiAgICBhbm9tYWxpZXMsXG4gICAgbW92aW5nQXZlcmFnZXMgXG4gIH07XG59OyAiXSwibmFtZXMiOlsiY2FsY3VsYXRlTW92aW5nQXZlcmFnZSIsImRhdGEiLCJwZXJpb2QiLCJsZW5ndGgiLCJyZWR1Y2UiLCJhIiwiYiIsImxhdGVzdERhdGEiLCJzbGljZSIsIkFub21hbHlEZXRlY3RvciIsImFkZEFub21hbHkiLCJ0aW1lc3RhbXAiLCJyZWxhdGl2ZUluZGV4IiwiYW5vbWFsaWVzIiwic2V0IiwiY2xlYW51cCIsInRlbk1pbnV0ZXNBZ28iLCJEYXRlIiwibm93IiwiZGVsZXRlIiwiZ2V0QW5vbWFsaWVzIiwiQXJyYXkiLCJmcm9tIiwiZW50cmllcyIsInNvcnQiLCJtYXAiLCJfIiwiaW5kZXgiLCJNYXAiLCJkZXRlY3RvciIsImNhbGN1bGF0ZVN0YXRzIiwidm9sdW1lcyIsImQiLCJuZXRWb2x1bWUiLCJtZWFuIiwicmVjZW50Vm9sdW1lcyIsInN0ZERldiIsIk1hdGgiLCJzcXJ0IiwicG93IiwibGF0ZXN0VmFsdWUiLCJ6U2NvcmUiLCJhYnMiLCJmaWx0ZXIiLCJtb3ZpbmdBdmVyYWdlcyIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/calculations.ts\n"));

/***/ })

});