"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/calculations.ts":
/*!***********************************!*\
  !*** ./src/utils/calculations.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateMovingAverage: function() { return /* binding */ calculateMovingAverage; },\n/* harmony export */   calculateStats: function() { return /* binding */ calculateStats; }\n/* harmony export */ });\nconst calculateMovingAverage = function(data) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    if (data.length < period) return data.reduce((a, b)=>a + b, 0) / data.length;\n    const latestData = data.slice(-period);\n    return latestData.reduce((a, b)=>a + b, 0) / period;\n};\n// 使用 Map 來存儲異常值，key 是時間戳，value 是數據索引\nconst anomalyMap = new Map();\nconst calculateStats = function(data) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    const volumes = data.map((d)=>d.netVolume);\n    const mean = calculateMovingAverage(volumes, period);\n    // 計算標準差\n    const recentVolumes = volumes.slice(-period);\n    const stdDev = Math.sqrt(recentVolumes.reduce((a, b)=>a + Math.pow(b - mean, 2), 0) / period);\n    // 只檢查最新的數據點\n    const latestIndex = volumes.length - 1;\n    const latestValue = volumes[latestIndex];\n    const zScore = Math.abs(latestValue - mean) / stdDev;\n    // 如果最新數據點是異常值，添加到 Map 中\n    if (zScore > 2) {\n        anomalyMap.set(Date.now(), latestIndex);\n    }\n    // 清理超過 10 分鐘的異常值記錄\n    const tenMinutesAgo = Date.now() - 10 * 60 * 1000;\n    for (const [timestamp] of anomalyMap){\n        if (timestamp < tenMinutesAgo) {\n            anomalyMap.delete(timestamp);\n        }\n    }\n    // 獲取所有異常值的索引，並按時間排序\n    const anomalies = Array.from(anomalyMap.entries()).sort((a, b)=>a[0] - b[0]) // 按時間戳排序\n    .map((param)=>{\n        let [_, index] = param;\n        return index;\n    }).slice(-10); // 只保留最近的 10 個異常值\n    // 計算移動平均線數據\n    const movingAverages = volumes.map((_, i)=>{\n        if (i < period) {\n            return calculateMovingAverage(volumes.slice(0, i + 1));\n        }\n        return calculateMovingAverage(volumes.slice(i - period + 1, i + 1));\n    });\n    return {\n        mean,\n        stdDev,\n        anomalies,\n        movingAverages\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY2FsY3VsYXRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEseUJBQXlCLFNBQUNDO1FBQWdCQywwRUFBaUI7SUFDdEUsSUFBSUQsS0FBS0UsTUFBTSxHQUFHRCxRQUFRLE9BQU9ELEtBQUtHLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxJQUFNRCxJQUFJQyxHQUFHLEtBQUtMLEtBQUtFLE1BQU07SUFFOUUsTUFBTUksYUFBYU4sS0FBS08sS0FBSyxDQUFDLENBQUNOO0lBQy9CLE9BQU9LLFdBQVdILE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxJQUFNRCxJQUFJQyxHQUFHLEtBQUtKO0FBQ2pELEVBQUU7QUFPRixxQ0FBcUM7QUFDckMsTUFBTU8sYUFBYSxJQUFJQztBQUVoQixNQUFNQyxpQkFBaUIsU0FBQ1Y7UUFBb0NDLDBFQUFpQjtJQUNsRixNQUFNVSxVQUFVWCxLQUFLWSxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLFNBQVM7SUFDekMsTUFBTUMsT0FBT2hCLHVCQUF1QlksU0FBU1Y7SUFFN0MsUUFBUTtJQUNSLE1BQU1lLGdCQUFnQkwsUUFBUUosS0FBSyxDQUFDLENBQUNOO0lBQ3JDLE1BQU1nQixTQUFTQyxLQUFLQyxJQUFJLENBQ3RCSCxjQUFjYixNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUQsSUFBSWMsS0FBS0UsR0FBRyxDQUFDZixJQUFJVSxNQUFNLElBQUksS0FBS2Q7SUFHakUsWUFBWTtJQUNaLE1BQU1vQixjQUFjVixRQUFRVCxNQUFNLEdBQUc7SUFDckMsTUFBTW9CLGNBQWNYLE9BQU8sQ0FBQ1UsWUFBWTtJQUN4QyxNQUFNRSxTQUFTTCxLQUFLTSxHQUFHLENBQUNGLGNBQWNQLFFBQVFFO0lBRTlDLHdCQUF3QjtJQUN4QixJQUFJTSxTQUFTLEdBQUc7UUFDZGYsV0FBV2lCLEdBQUcsQ0FBQ0MsS0FBS0MsR0FBRyxJQUFJTjtJQUM3QjtJQUVBLG1CQUFtQjtJQUNuQixNQUFNTyxnQkFBZ0JGLEtBQUtDLEdBQUcsS0FBSyxLQUFLLEtBQUs7SUFDN0MsS0FBSyxNQUFNLENBQUNFLFVBQVUsSUFBSXJCLFdBQVk7UUFDcEMsSUFBSXFCLFlBQVlELGVBQWU7WUFDN0JwQixXQUFXc0IsTUFBTSxDQUFDRDtRQUNwQjtJQUNGO0lBRUEsb0JBQW9CO0lBQ3BCLE1BQU1FLFlBQVlDLE1BQU1DLElBQUksQ0FBQ3pCLFdBQVcwQixPQUFPLElBQzVDQyxJQUFJLENBQUMsQ0FBQy9CLEdBQUdDLElBQU1ELENBQUMsQ0FBQyxFQUFFLEdBQUdDLENBQUMsQ0FBQyxFQUFFLEVBQUcsU0FBUztLQUN0Q08sR0FBRyxDQUFDO1lBQUMsQ0FBQ3dCLEdBQUdDLE1BQU07ZUFBS0E7SUFBSSxHQUN4QjlCLEtBQUssQ0FBQyxDQUFDLEtBQU0saUJBQWlCO0lBRWpDLFlBQVk7SUFDWixNQUFNK0IsaUJBQWlCM0IsUUFBUUMsR0FBRyxDQUFDLENBQUN3QixHQUFHRztRQUNyQyxJQUFJQSxJQUFJdEMsUUFBUTtZQUNkLE9BQU9GLHVCQUF1QlksUUFBUUosS0FBSyxDQUFDLEdBQUdnQyxJQUFJO1FBQ3JEO1FBQ0EsT0FBT3hDLHVCQUF1QlksUUFBUUosS0FBSyxDQUFDZ0MsSUFBSXRDLFNBQVMsR0FBR3NDLElBQUk7SUFDbEU7SUFFQSxPQUFPO1FBQ0x4QjtRQUNBRTtRQUNBYztRQUNBTztJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdXRpbHMvY2FsY3VsYXRpb25zLnRzPzM5YjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZU1vdmluZ0F2ZXJhZ2UgPSAoZGF0YTogbnVtYmVyW10sIHBlcmlvZDogbnVtYmVyID0gNjApID0+IHtcbiAgaWYgKGRhdGEubGVuZ3RoIDwgcGVyaW9kKSByZXR1cm4gZGF0YS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKSAvIGRhdGEubGVuZ3RoO1xuICBcbiAgY29uc3QgbGF0ZXN0RGF0YSA9IGRhdGEuc2xpY2UoLXBlcmlvZCk7XG4gIHJldHVybiBsYXRlc3REYXRhLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApIC8gcGVyaW9kO1xufTtcblxuaW50ZXJmYWNlIEFub21hbHlSZWNvcmQge1xuICBpbmRleDogbnVtYmVyO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbn1cblxuLy8g5L2/55SoIE1hcCDkvoblrZjlhLLnlbDluLjlgLzvvIxrZXkg5piv5pmC6ZaT5oiz77yMdmFsdWUg5piv5pW45pOa57Si5byVXG5jb25zdCBhbm9tYWx5TWFwID0gbmV3IE1hcDxudW1iZXIsIG51bWJlcj4oKTtcblxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZVN0YXRzID0gKGRhdGE6IEFycmF5PHsgbmV0Vm9sdW1lOiBudW1iZXIgfT4sIHBlcmlvZDogbnVtYmVyID0gNjApID0+IHtcbiAgY29uc3Qgdm9sdW1lcyA9IGRhdGEubWFwKGQgPT4gZC5uZXRWb2x1bWUpO1xuICBjb25zdCBtZWFuID0gY2FsY3VsYXRlTW92aW5nQXZlcmFnZSh2b2x1bWVzLCBwZXJpb2QpO1xuICBcbiAgLy8g6KiI566X5qiZ5rqW5beuXG4gIGNvbnN0IHJlY2VudFZvbHVtZXMgPSB2b2x1bWVzLnNsaWNlKC1wZXJpb2QpO1xuICBjb25zdCBzdGREZXYgPSBNYXRoLnNxcnQoXG4gICAgcmVjZW50Vm9sdW1lcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBNYXRoLnBvdyhiIC0gbWVhbiwgMiksIDApIC8gcGVyaW9kXG4gICk7XG5cbiAgLy8g5Y+q5qqi5p+l5pyA5paw55qE5pW45pOa6bueXG4gIGNvbnN0IGxhdGVzdEluZGV4ID0gdm9sdW1lcy5sZW5ndGggLSAxO1xuICBjb25zdCBsYXRlc3RWYWx1ZSA9IHZvbHVtZXNbbGF0ZXN0SW5kZXhdO1xuICBjb25zdCB6U2NvcmUgPSBNYXRoLmFicyhsYXRlc3RWYWx1ZSAtIG1lYW4pIC8gc3RkRGV2O1xuICBcbiAgLy8g5aaC5p6c5pyA5paw5pW45pOa6bue5piv55Ww5bi45YC877yM5re75Yqg5YiwIE1hcCDkuK1cbiAgaWYgKHpTY29yZSA+IDIpIHtcbiAgICBhbm9tYWx5TWFwLnNldChEYXRlLm5vdygpLCBsYXRlc3RJbmRleCk7XG4gIH1cblxuICAvLyDmuIXnkIbotoXpgY4gMTAg5YiG6ZCY55qE55Ww5bi45YC86KiY6YyEXG4gIGNvbnN0IHRlbk1pbnV0ZXNBZ28gPSBEYXRlLm5vdygpIC0gMTAgKiA2MCAqIDEwMDA7XG4gIGZvciAoY29uc3QgW3RpbWVzdGFtcF0gb2YgYW5vbWFseU1hcCkge1xuICAgIGlmICh0aW1lc3RhbXAgPCB0ZW5NaW51dGVzQWdvKSB7XG4gICAgICBhbm9tYWx5TWFwLmRlbGV0ZSh0aW1lc3RhbXApO1xuICAgIH1cbiAgfVxuXG4gIC8vIOeNsuWPluaJgOacieeVsOW4uOWAvOeahOe0ouW8le+8jOS4puaMieaZgumWk+aOkuW6j1xuICBjb25zdCBhbm9tYWxpZXMgPSBBcnJheS5mcm9tKGFub21hbHlNYXAuZW50cmllcygpKVxuICAgIC5zb3J0KChhLCBiKSA9PiBhWzBdIC0gYlswXSkgIC8vIOaMieaZgumWk+aIs+aOkuW6j1xuICAgIC5tYXAoKFtfLCBpbmRleF0pID0+IGluZGV4KVxuICAgIC5zbGljZSgtMTApOyAgLy8g5Y+q5L+d55WZ5pyA6L+R55qEIDEwIOWAi+eVsOW4uOWAvFxuXG4gIC8vIOioiOeul+enu+WLleW5s+Wdh+e3muaVuOaTmlxuICBjb25zdCBtb3ZpbmdBdmVyYWdlcyA9IHZvbHVtZXMubWFwKChfLCBpKSA9PiB7XG4gICAgaWYgKGkgPCBwZXJpb2QpIHtcbiAgICAgIHJldHVybiBjYWxjdWxhdGVNb3ZpbmdBdmVyYWdlKHZvbHVtZXMuc2xpY2UoMCwgaSArIDEpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNhbGN1bGF0ZU1vdmluZ0F2ZXJhZ2Uodm9sdW1lcy5zbGljZShpIC0gcGVyaW9kICsgMSwgaSArIDEpKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHsgXG4gICAgbWVhbiwgXG4gICAgc3RkRGV2LCBcbiAgICBhbm9tYWxpZXMsXG4gICAgbW92aW5nQXZlcmFnZXMgXG4gIH07XG59OyAiXSwibmFtZXMiOlsiY2FsY3VsYXRlTW92aW5nQXZlcmFnZSIsImRhdGEiLCJwZXJpb2QiLCJsZW5ndGgiLCJyZWR1Y2UiLCJhIiwiYiIsImxhdGVzdERhdGEiLCJzbGljZSIsImFub21hbHlNYXAiLCJNYXAiLCJjYWxjdWxhdGVTdGF0cyIsInZvbHVtZXMiLCJtYXAiLCJkIiwibmV0Vm9sdW1lIiwibWVhbiIsInJlY2VudFZvbHVtZXMiLCJzdGREZXYiLCJNYXRoIiwic3FydCIsInBvdyIsImxhdGVzdEluZGV4IiwibGF0ZXN0VmFsdWUiLCJ6U2NvcmUiLCJhYnMiLCJzZXQiLCJEYXRlIiwibm93IiwidGVuTWludXRlc0FnbyIsInRpbWVzdGFtcCIsImRlbGV0ZSIsImFub21hbGllcyIsIkFycmF5IiwiZnJvbSIsImVudHJpZXMiLCJzb3J0IiwiXyIsImluZGV4IiwibW92aW5nQXZlcmFnZXMiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/calculations.ts\n"));

/***/ })

});