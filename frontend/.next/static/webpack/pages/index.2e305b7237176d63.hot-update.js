"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/stores/marketStore.ts":
/*!***********************************!*\
  !*** ./src/stores/marketStore.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMarketStore: function() { return /* binding */ useMarketStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"./node_modules/zustand/esm/index.mjs\");\n\n// 使用 Map 來存儲異常值，key 是時間戳，value 是完整的異常記錄\nconst anomalyMap = new Map();\nconst calculateStats = function(volumes) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60;\n    // 移動平均計算\n    const mean = volumes.slice(-period).reduce((a, b)=>a + b, 0) / period;\n    // 標準差計算\n    const recentVolumes = volumes.slice(-period);\n    const stdDev = Math.sqrt(recentVolumes.reduce((a, b)=>a + Math.pow(b - mean, 2), 0) / period);\n    return {\n        mean,\n        stdDev\n    };\n};\nconst useMarketStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        data: [],\n        anomalies: [],\n        stats: {\n            mean: 0,\n            stdDev: 0,\n            movingAverages: []\n        },\n        addData: (newData)=>{\n            set((state)=>{\n                // 保持最近 100 筆數據\n                const updatedData = [\n                    ...state.data.slice(-99),\n                    newData\n                ];\n                const volumes = updatedData.map((d)=>d.netVolume);\n                // 計算統計數據\n                const { mean, stdDev } = calculateStats(volumes);\n                // 檢查最新數據是否異常\n                const latestValue = newData.netVolume;\n                const zScore = Math.abs(latestValue - mean) / stdDev;\n                // 如果最新數據點是異常值，添加到 Map 中\n                if (zScore > 2.5) {\n                    const now = Date.now();\n                    anomalyMap.set(now, {\n                        timestamp: now,\n                        value: latestValue,\n                        relativeIndex: updatedData.length - 1\n                    });\n                }\n                // 清理超過 10 分鐘的異常值記錄\n                const tenMinutesAgo = Date.now() - 10 * 60 * 1000;\n                for (const [timestamp] of anomalyMap){\n                    if (timestamp < tenMinutesAgo) {\n                        anomalyMap.delete(timestamp);\n                    }\n                }\n                // 更新所有異常值的相對索引\n                for (const [timestamp, record] of anomalyMap){\n                    const originalIndex = record.relativeIndex;\n                    const newRelativeIndex = originalIndex % 100; // 轉換為相對於當前數據集的索引\n                    if (newRelativeIndex !== record.relativeIndex) {\n                        anomalyMap.set(timestamp, {\n                            ...record,\n                            relativeIndex: newRelativeIndex\n                        });\n                    }\n                }\n                // 獲取所有異常值的索引，並按時間排序\n                const anomalies = Array.from(anomalyMap.values()).sort((a, b)=>b.timestamp - a.timestamp) // 按時間戳降序排序\n                .slice(0, 10) // 取最近的 10 個\n                .map((record)=>record.relativeIndex); // 轉換為索引數組\n                // 計算移動平均線\n                const movingAverages = volumes.map((_, i)=>{\n                    const period = 60;\n                    if (i < period) {\n                        return volumes.slice(0, i + 1).reduce((a, b)=>a + b, 0) / (i + 1);\n                    }\n                    return volumes.slice(i - period + 1, i + 1).reduce((a, b)=>a + b, 0) / period;\n                });\n                return {\n                    data: updatedData,\n                    anomalies,\n                    stats: {\n                        mean,\n                        stdDev,\n                        movingAverages\n                    }\n                };\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stores/marketStore.ts\n"));

/***/ })

});